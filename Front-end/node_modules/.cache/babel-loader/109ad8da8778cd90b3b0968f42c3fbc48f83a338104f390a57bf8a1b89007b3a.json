{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\AssignmentSubmissionApp\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStorage\";\nimport { Routes, Route } from \"react-router-dom\"; // Make sure to import Routes and Route\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // This will log \"Hello\" to the console when the component renders\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n  // useEffect(() => {\n  //   if (!jwt) {\n  //     const reqBody = {\n  //       username: \"vivek\",\n  //       password: \"asdfasdf\",\n  //     };\n\n  //     fetch(\"api/auth/login\", {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       method: \"post\",\n  //       body: JSON.stringify(reqBody), // Sending the request body as JSON\n  //     })\n  //       .then((response) => Promise.all([response.json(), response.headers]))\n  //       .then(([body, headers]) => {\n  //         setJwt(headers.get(\"authorization\")); // Getting the \"authorization\" header value\n  //       });\n  //   }\n  // }, []); // The empty array means this effect runs only once when the component mounts\n\n  // useEffect(() => {\n  //   console.log(`JWT:${jwt}`);\n  // }, [jwt]);\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ik47MptFYNtyQa5EonoqndL2nAM=\", false, function () {\n  return [useLocalState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useLocalState","Routes","Route","Login","jsxDEV","_jsxDEV","App","_s","jwt","setJwt","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/AssignmentSubmissionApp/front-end/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStorage\";\nimport { Routes, Route } from \"react-router-dom\"; // Make sure to import Routes and Route\nimport Login from \"./Login\";\n\nfunction App() {\n  // This will log \"Hello\" to the console when the component renders\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n  // useEffect(() => {\n  //   if (!jwt) {\n  //     const reqBody = {\n  //       username: \"vivek\",\n  //       password: \"asdfasdf\",\n  //     };\n\n  //     fetch(\"api/auth/login\", {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       method: \"post\",\n  //       body: JSON.stringify(reqBody), // Sending the request body as JSON\n  //     })\n  //       .then((response) => Promise.all([response.json(), response.headers]))\n  //       .then(([body, headers]) => {\n  //         setJwt(headers.get(\"authorization\")); // Getting the \"authorization\" header value\n  //       });\n  //   }\n  // }, []); // The empty array means this effect runs only once when the component mounts\n\n  // useEffect(() => {\n  //   console.log(`JWT:${jwt}`);\n  // }, [jwt]);\n\n  return (\n    <Routes>\n      <Route path=\"/login\" element={<Login />} />\n    </Routes>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB,CAAC,CAAC;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;;EAE9C;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACEK,OAAA,CAACJ,MAAM;IAAAS,QAAA,eACLL,OAAA,CAACH,KAAK;MAACS,IAAI,EAAC,QAAQ;MAACC,OAAO,eAAEP,OAAA,CAACF,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEb;AAACT,EAAA,CAlCQD,GAAG;EAAA,QAEYN,aAAa;AAAA;AAAAiB,EAAA,GAF5BX,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}