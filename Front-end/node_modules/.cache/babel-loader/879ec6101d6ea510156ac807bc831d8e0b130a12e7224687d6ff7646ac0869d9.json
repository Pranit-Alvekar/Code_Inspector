{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\front-end\\\\src\\\\Dashboard\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocalState } from '../util/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [assignments, setAssignments] = useState(null);\n  useEffect(() => {\n    fetch(\"api/assignments\", {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"GET\"\n    });\n  }, []);\n  function createAssignment() {\n    fetch(\"api/assignments\", {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"POST\"\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignment => {\n      window.location.href = `/assignments/${assignment.id}`;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '2em'\n    },\n    children: [assignments ? assignments.map(assignment => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 64\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createAssignment(),\n      children: \"Submit New Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n_s(Dashboard, \"zLfgry9nLjDjn+eEu8SFxLC0uZk=\", false, function () {\n  return [useLocalState];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","jwt","setJwt","assignments","setAssignments","fetch","headers","Authorization","method","createAssignment","then","response","status","json","assignment","window","location","href","id","style","margin","children","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/front-end/src/Dashboard/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\n\r\nconst Dashboard = () => {\r\n    const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n    const [assignments,setAssignments] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        fetch(\"api/assignments\",{\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                Authorization: `Bearer ${jwt}`\r\n            },\r\n            method:\"GET\"\r\n        })\r\n    },[])\r\n\r\n    function createAssignment(){\r\n        fetch(\"api/assignments\",{\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                Authorization: `Bearer ${jwt}`\r\n            },\r\n            method:\"POST\"\r\n        })\r\n        .then(response=>{\r\n            if(response.status === 200) return response.json();\r\n        }).then((assignment)=>{\r\n            window.location.href= `/assignments/${assignment.id}`\r\n        })\r\n    }\r\n    return (\r\n        \r\n            <div style={{margin:'2em'}}>\r\n                {assignments ? assignments.map((assignment) => <div></div>) : <></>}\r\n                <button onClick={()=>createAssignment()}>\r\n                    Submit New Assignment\r\n                </button>\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAC9C,MAAM,CAACS,WAAW,EAACC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEnDD,SAAS,CAAC,MAAI;IACVa,KAAK,CAAC,iBAAiB,EAAC;MACpBC,OAAO,EAAC;QACJ,cAAc,EAAC,kBAAkB;QACjCC,aAAa,EAAG,UAASN,GAAI;MACjC,CAAC;MACDO,MAAM,EAAC;IACX,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,SAASC,gBAAgBA,CAAA,EAAE;IACvBJ,KAAK,CAAC,iBAAiB,EAAC;MACpBC,OAAO,EAAC;QACJ,cAAc,EAAC,kBAAkB;QACjCC,aAAa,EAAG,UAASN,GAAI;MACjC,CAAC;MACDO,MAAM,EAAC;IACX,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAE;MACZ,IAAGA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC,CAACH,IAAI,CAAEI,UAAU,IAAG;MAClBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,gBAAeH,UAAU,CAACI,EAAG,EAAC;IACzD,CAAC,CAAC;EACN;EACA,oBAEQtB,OAAA;IAAKuB,KAAK,EAAE;MAACC,MAAM,EAAC;IAAK,CAAE;IAAAC,QAAA,GACtBlB,WAAW,GAAGA,WAAW,CAACmB,GAAG,CAAER,UAAU,iBAAKlB,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,CAAC,gBAAG9B,OAAA,CAAAE,SAAA,mBAAI,CAAC,eACnEF,OAAA;MAAQ+B,OAAO,EAAEA,CAAA,KAAIlB,gBAAgB,CAAC,CAAE;MAAAY,QAAA,EAAC;IAEzC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGlB,CAAC;AAAC1B,EAAA,CAtCID,SAAS;EAAA,QACWL,aAAa;AAAA;AAAAkC,EAAA,GADjC7B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}