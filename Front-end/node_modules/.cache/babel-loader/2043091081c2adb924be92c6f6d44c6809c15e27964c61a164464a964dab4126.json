{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\front-end\\\\src\\\\AssignmentView\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalState } from \"../util/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AssignmentView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [assignment, setAssignment] = useState(null);\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function updateAssignment(prop, value) {\n    assignment[prop] = value;\n    console.log(assignment);\n  }\n  function save() {\n    fetch(`/api/assignments/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"PUT\",\n      body: JSON.stringify(assignment)\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentsData => {\n      setAssignment(assignmentsData);\n    });\n  }\n  useEffect(() => {\n    fetch(`/api/assignments/${id}`, {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"GET\"\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentsData => {\n      setAssignment(assignmentsData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Assignment \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status : \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Github URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"githuburl\",\n          onChange: e => updateAssignment(\"githuburl\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Branch: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"branch\",\n          onChange: e => updateAssignment(\"branch\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => save(),\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentView, \"2h+ygJX5wfu8r243Jhy9IcMX890=\", false, function () {\n  return [useParams, useLocalState];\n});\n_c = AssignmentView;\nexport default AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","id","assignment","setAssignment","jwt","setJwt","updateAssignment","prop","value","console","log","save","fetch","headers","Authorization","method","body","JSON","stringify","then","response","status","json","assignmentsData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/front-end/src/AssignmentView/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocalState } from \"../util/useLocalStorage\";\r\n\r\nconst AssignmentView = () => {\r\n  const { id } = useParams();\r\n  const [assignment, setAssignment] = useState(null);\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n \r\n  function updateAssignment(prop,value){\r\n    assignment[prop] = value\r\n    console.log(assignment)\r\n  }\r\n\r\n  function save(){\r\n    fetch(`/api/assignments/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization:`Bearer ${jwt}`,\r\n        },\r\n        method: \"PUT\",\r\n        body: JSON.stringify(assignment),\r\n    })\r\n    .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((assignmentsData) => {\r\n        setAssignment(assignmentsData);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/assignments/${id}`, {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((assignmentsData) => {\r\n        setAssignment(assignmentsData);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Assignment {id}</h1>\r\n      {assignment ? (\r\n        <>\r\n          <h2>Status : {assignment.status}</h2>\r\n          <h2>\r\n            Github URL: <input \r\n            type=\"url\" \r\n            id=\"githuburl\"\r\n            onChange={(e)=>updateAssignment(\"githuburl\",e.target.value)}\r\n            />\r\n          </h2>\r\n          <h2>\r\n            Branch: <input \r\n            type=\"text\" \r\n            id=\"branch\"\r\n            onChange={(e)=>updateAssignment(\"branch\",e.target.value)}\r\n            />\r\n          </h2>\r\n          <button onClick={() => save()}>Submit Assignment</button>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignmentView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}