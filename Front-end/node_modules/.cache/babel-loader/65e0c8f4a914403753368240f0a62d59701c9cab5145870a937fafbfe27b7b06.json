{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\front-end\\\\src\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../UserProvider\";\nimport NavBar from \"../NavBar\";\nimport { toast } from \"react-toastify\"; // Import toast from react-toastify\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const user = useUser();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (user.jwt) navigate(\"/dashboard\");\n  }, [user]);\n  function sendLoginRequest() {\n    const reqBody = {\n      username: username,\n      password: password\n    };\n    fetch(\"api/auth/login\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(reqBody) // Sending the request body as JSON\n    }).then(response => {\n      if (response.status === 200) return Promise.all([response.json(), response.headers]);else return Promise.reject(\"Invalid login attempt\");\n    }).then(([body, headers]) => {\n      user.setJwt(headers.get(\"authorization\"));\n      toast.success(\"Login successful!\"); // Display success toast\n    }).catch(message => {\n      alert(message);\n      toast.error(\"Invalid login attempt. Please check your credentials.\"); // Display error toast\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"1po1A7yhSPadD8gGU5AcbUUxBYs=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","Button","Col","Container","Row","Form","useNavigate","useUser","NavBar","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","user","username","setUsername","password","setPassword","navigate","jwt","sendLoginRequest","reqBody","fetch","headers","method","body","JSON","stringify","then","response","status","Promise","all","json","reject","setJwt","get","success","catch","message","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/front-end/src/Login/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUser } from \"../UserProvider\";\r\nimport NavBar from \"../NavBar\";\r\nimport { toast } from \"react-toastify\"; // Import toast from react-toastify\r\n\r\nconst Login = () => {\r\n  const user = useUser();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (user.jwt) navigate(\"/dashboard\");\r\n  }, [user]);\r\n\r\n  function sendLoginRequest() {\r\n    const reqBody = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    fetch(\"api/auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(reqBody), // Sending the request body as JSON\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200)\r\n          return Promise.all([response.json(), response.headers]);\r\n        else return Promise.reject(\"Invalid login attempt\");\r\n      })\r\n      .then(([body, headers]) => {\r\n        user.setJwt(headers.get(\"authorization\"));\r\n        toast.success(\"Login successful!\"); // Display success toast\r\n      })\r\n      .catch((message) => {\r\n        alert(message);\r\n        toast.error(\"Invalid login attempt. Please check your credentials.\"); // Display error toast\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container>\r\n        {/* ... (Rest of the code) ... */}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAC7D,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,KAAK,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGT,OAAO,CAAC,CAAC;EACtB,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMqB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BP,SAAS,CAAC,MAAM;IACd,IAAIiB,IAAI,CAACM,GAAG,EAAED,QAAQ,CAAC,YAAY,CAAC;EACtC,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,SAASO,gBAAgBA,CAAA,EAAG;IAC1B,MAAMC,OAAO,GAAG;MACdP,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC;IAEDM,KAAK,CAAC,gBAAgB,EAAE;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAE;IACjC,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EACzB,OAAOC,OAAO,CAACC,GAAG,CAAC,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,EAAEJ,QAAQ,CAACN,OAAO,CAAC,CAAC,CAAC,KACrD,OAAOQ,OAAO,CAACG,MAAM,CAAC,uBAAuB,CAAC;IACrD,CAAC,CAAC,CACDN,IAAI,CAAC,CAAC,CAACH,IAAI,EAAEF,OAAO,CAAC,KAAK;MACzBV,IAAI,CAACsB,MAAM,CAACZ,OAAO,CAACa,GAAG,CAAC,eAAe,CAAC,CAAC;MACzC9B,KAAK,CAAC+B,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CACDC,KAAK,CAAEC,OAAO,IAAK;MAClBC,KAAK,CAACD,OAAO,CAAC;MACdjC,KAAK,CAACmC,KAAK,CAAC,uDAAuD,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC;EACN;;EAEA,oBACEjC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACElC,OAAA,CAACH,MAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtC,OAAA,CAACR,SAAS;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAAClC,EAAA,CA9CID,KAAK;EAAA,QACIP,OAAO,EAGHD,WAAW;AAAA;AAAA4C,EAAA,GAJxBpC,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}