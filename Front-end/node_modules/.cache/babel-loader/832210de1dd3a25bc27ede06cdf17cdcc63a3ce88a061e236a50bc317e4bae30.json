{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport Dashboard from \"./Dashboard\";\nimport Homepage from \"./Homepage\";\nimport Login from \"./Login\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport AssignmentView from \"./AssignmentView\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CodeReviewerDashboard from \"./CodeReviewerDashboard\";\nimport CodeReviewAssignmentView from \"./CodeReviewAssignmentView/CodeReviewAssignmentView\";\nimport { useUser } from \"./UserProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // This will log \"Hello\" to the console when the component renders\n  //const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [roles, setRoles] = useState([]);\n  const user = useUser();\n  useEffect(() => {\n    setRoles(getRolesFromJWT());\n  }, [user.jwt]);\n  function getRolesFromJWT() {\n    if (user.jwt) {\n      const decodedJWT = jwt_decode(user.jwt);\n      return decodedJWT.authorities;\n    }\n    return [];\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard\",\n      element: roles.find(role => role === \"ROLE_CODE_REVIEWER\") ? /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        children: /*#__PURE__*/_jsxDEV(CodeReviewerDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/assignments/:id\",\n      element: roles.find(role => role === \"ROLE_CODE_REVIEWER\") ? /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        children: /*#__PURE__*/_jsxDEV(CodeReviewAssignmentView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        children: /*#__PURE__*/_jsxDEV(AssignmentView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"CfUsAZ9mTyEcmJiTmrgpN0lxnsE=\", false, function () {\n  return [useUser];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","jwt_decode","Dashboard","Homepage","Login","PrivateRoute","AssignmentView","CodeReviewerDashboard","CodeReviewAssignmentView","useUser","jsxDEV","_jsxDEV","App","_s","roles","setRoles","user","getRolesFromJWT","jwt","decodedJWT","authorities","children","path","element","find","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/front-end/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Homepage from \"./Homepage\";\r\nimport Login from \"./Login\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport AssignmentView from \"./AssignmentView\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CodeReviewerDashboard from \"./CodeReviewerDashboard\";\r\nimport CodeReviewAssignmentView from \"./CodeReviewAssignmentView/CodeReviewAssignmentView\";\r\nimport {  useUser } from \"./UserProvider\";\r\n\r\nfunction App() {\r\n  // This will log \"Hello\" to the console when the component renders\r\n  //const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [roles, setRoles] = useState([]);\r\n  const user = useUser();\r\n\r\n  useEffect(()=>{\r\n    setRoles(getRolesFromJWT());\r\n  },[user.jwt]);\r\n\r\n  function getRolesFromJWT() {\r\n    if (user.jwt) {\r\n      const decodedJWT = jwt_decode(user.jwt);\r\n      return decodedJWT.authorities;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  return (\r\n    \r\n      <Routes>\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={\r\n            roles.find((role) => role === \"ROLE_CODE_REVIEWER\") ? (\r\n              <PrivateRoute>\r\n                <CodeReviewerDashboard />\r\n              </PrivateRoute>\r\n            ) : (\r\n              <PrivateRoute>\r\n                <Dashboard />\r\n              </PrivateRoute>\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/assignments/:id\"\r\n          element={\r\n            roles.find((role) => role === \"ROLE_CODE_REVIEWER\") ? (\r\n              <PrivateRoute>\r\n                <CodeReviewAssignmentView />\r\n              </PrivateRoute>\r\n            ) : (\r\n              <PrivateRoute>\r\n                <AssignmentView />\r\n              </PrivateRoute>\r\n            )\r\n          }\r\n        ></Route>\r\n        <Route path=\"login\" element={<Login />} />\r\n        <Route path=\"/\" element={<Homepage />} />\r\n      </Routes>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}