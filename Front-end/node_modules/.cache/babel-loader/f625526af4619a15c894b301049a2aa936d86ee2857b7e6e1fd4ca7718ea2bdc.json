{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\AssignmentSubmissionApp\\\\front-end\\\\src\\\\App.js\";\nimport { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStorage\";\nimport { Route, Router, Routes } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // This will log \"Hello\" to the console when the component renders\n  // const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n  // useEffect(() => {\n  //   if (!jwt) {\n  //     const reqBody = {\n  //       username: \"vivek\",\n  //       password: \"asdfasdf\",\n  //     };\n\n  //     fetch(\"api/auth/login\", {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       method: \"post\",\n  //       body: JSON.stringify(reqBody), // Sending the request body as JSON\n  //     })\n  //       .then((response) => Promise.all([response.json(), response.headers]))\n  //       .then(([body, headers]) => {\n  //         setJwt(headers.get(\"authorization\")); // Getting the \"authorization\" header value\n  //       });\n  //   }\n  // }, []); // The empty array means this effect runs only once when the component mounts\n\n  // useEffect(() => {\n  //   console.log(`JWT:${jwt}`);\n  // }, [jwt]);\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useLocalState","Route","Router","Routes","Login","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/AssignmentSubmissionApp/front-end/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStorage\";\nimport { Route, Router, Routes } from \"react-router-dom\";\nimport Login from \"./Login\";\n\nfunction App() {\n  // This will log \"Hello\" to the console when the component renders\n  // const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n  // useEffect(() => {\n  //   if (!jwt) {\n  //     const reqBody = {\n  //       username: \"vivek\",\n  //       password: \"asdfasdf\",\n  //     };\n\n  //     fetch(\"api/auth/login\", {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       method: \"post\",\n  //       body: JSON.stringify(reqBody), // Sending the request body as JSON\n  //     })\n  //       .then((response) => Promise.all([response.json(), response.headers]))\n  //       .then(([body, headers]) => {\n  //         setJwt(headers.get(\"authorization\")); // Getting the \"authorization\" header value\n  //       });\n  //   }\n  // }, []); // The empty array means this effect runs only once when the component mounts\n\n  // useEffect(() => {\n  //   console.log(`JWT:${jwt}`);\n  // }, [jwt]);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"login\" element={<Login />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACED,OAAA,CAACJ,MAAM;IAAAM,QAAA,eACLF,OAAA,CAACH,MAAM;MAAAK,QAAA,eACLF,OAAA,CAACL,KAAK;QAACQ,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEJ,OAAA,CAACF,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACC,EAAA,GApCQR,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}