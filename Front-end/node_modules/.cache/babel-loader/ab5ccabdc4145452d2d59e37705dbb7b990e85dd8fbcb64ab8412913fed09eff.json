{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\AssignmentSubmissionApp\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(\"Hello\"); // This will log \"Hello\" to the console when the component renders\n  const [jwt, setJwt] = useState(\"\");\n  useEffect(() => {\n    const reqBody = {\n      \"username\": \"vivek\",\n      \"password\": \"asdfasdf\"\n    };\n    fetch(\"api/auth/login\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(reqBody) // Sending the request body as JSON\n    }).then(response => Promise.all([response.json(), response.headers])).then(([body, headers]) => {\n      setJwt(headers.get(\"authorization\")); // Getting the \"authorization\" header value\n      console.log(\"we have JWT\");\n    });\n  }, []); // The empty array means this effect runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"JWT value is \", jwt, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dp1NpLHi4TPX3JdZOV+1qc8jVbU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","console","log","jwt","setJwt","reqBody","fetch","headers","method","body","JSON","stringify","then","response","Promise","all","json","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/AssignmentSubmissionApp/front-end/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  console.log(\"Hello\"); // This will log \"Hello\" to the console when the component renders\nconst [jwt,setJwt] = useState(\"\");\n  \nuseEffect(() => {\n    const reqBody = {\n      \"username\": \"vivek\",\n      \"password\": \"asdfasdf\"\n    };\n\n    fetch(\"api/auth/login\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(reqBody) // Sending the request body as JSON\n    })\n    .then((response) => Promise.all([response.json(), response.headers]))\n    .then(([body, headers]) => {\n      setJwt(headers.get(\"authorization\")); // Getting the \"authorization\" header value\n      console.log(\"we have JWT\")\n    });\n  }, []); // The empty array means this effect runs only once when the component mounts\n\n  return (\n    <div className=\"App\">\n      <h1>Hello</h1>\n      <div>JWT value is {jwt} </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;EACxB,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,MAAMU,OAAO,GAAG;MACd,UAAU,EAAE,OAAO;MACnB,UAAU,EAAE;IACd,CAAC;IAEDC,KAAK,CAAC,gBAAgB,EAAE;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,GAAG,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAEH,QAAQ,CAACN,OAAO,CAAC,CAAC,CAAC,CACpEK,IAAI,CAAC,CAAC,CAACH,IAAI,EAAEF,OAAO,CAAC,KAAK;MACzBH,MAAM,CAACG,OAAO,CAACU,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;MACtChB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdzB,OAAA;MAAAqB,QAAA,GAAK,eAAa,EAAChB,GAAG,EAAC,GAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACvB,EAAA,CA9BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}