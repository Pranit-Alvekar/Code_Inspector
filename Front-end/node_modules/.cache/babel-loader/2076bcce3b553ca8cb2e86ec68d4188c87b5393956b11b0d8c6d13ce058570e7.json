{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeInspector\\\\Git\\\\front-end\\\\src\\\\Dashboard\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocalState } from \"../util/useLocalStorage\";\nimport { Link } from \"react-router-dom\";\nimport ajax from \"../Services/fetchService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [assignments, setAssignments] = useState(null);\n  useEffect(() => {\n    ajax(\"api/assignments\", \"GET\", jwt).then(assignmentsData => {\n      setAssignments(assignmentsData);\n    });\n  }, []);\n  function createAssignment() {\n    fetch(\"api/assignments\", {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"POST\"\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignment => {\n      window.location.href = `/assignments/${assignment.id}`;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"2em\"\n    },\n    children: [assignments ? assignments.map(assignment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/assignments/${assignment.id}`,\n        children: [\"Assignment ID: \", assignment.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createAssignment(),\n      children: \"Submit New Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qPJy8vKNXu36rQsO8BA8X/Xtryc=\", false, function () {\n  return [useLocalState];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocalState","Link","ajax","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","jwt","setJwt","assignments","setAssignments","then","assignmentsData","createAssignment","fetch","headers","Authorization","method","response","status","json","assignment","window","location","href","id","style","margin","children","map","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/CodeInspector/Git/front-end/src/Dashboard/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocalState } from \"../util/useLocalStorage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ajax from \"../Services/fetchService\";\r\n\r\nconst Dashboard = () => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [assignments, setAssignments] = useState(null);\r\n\r\n  useEffect(() => {\r\n    ajax(\"api/assignments\",\"GET\",jwt)\r\n     .then((assignmentsData) => {\r\n        setAssignments(assignmentsData);\r\n      });\r\n  }, []);\r\n\r\n  function createAssignment() {\r\n    fetch(\"api/assignments\", {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((assignment) => {\r\n        window.location.href = `/assignments/${assignment.id}`;\r\n      });\r\n  }\r\n  return (\r\n    <div style={{ margin: \"2em\" }}>\r\n      {assignments ? (\r\n        assignments.map((assignment) => (\r\n          <div>\r\n            <Link to={`/assignments/${assignment.id}`}>\r\n                Assignment ID: {assignment.id}\r\n                </Link>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <button onClick={() => createAssignment()}>Submit New Assignment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAC9C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdI,IAAI,CAAC,iBAAiB,EAAC,KAAK,EAACO,GAAG,CAAC,CAC/BI,IAAI,CAAEC,eAAe,IAAK;MACxBF,cAAc,CAACE,eAAe,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,gBAAgBA,CAAA,EAAG;IAC1BC,KAAK,CAAC,iBAAiB,EAAE;MACvBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAAST,GAAI;MAC/B,CAAC;MACDU,MAAM,EAAE;IACV,CAAC,CAAC,CACCN,IAAI,CAAEO,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC,CACDT,IAAI,CAAEU,UAAU,IAAK;MACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,gBAAeH,UAAU,CAACI,EAAG,EAAC;IACxD,CAAC,CAAC;EACN;EACA,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,GAC3BnB,WAAW,GACVA,WAAW,CAACoB,GAAG,CAAER,UAAU,iBACzBnB,OAAA;MAAA0B,QAAA,eACE1B,OAAA,CAACH,IAAI;QAAC+B,EAAE,EAAG,gBAAeT,UAAU,CAACI,EAAG,EAAE;QAAAG,QAAA,GAAC,iBACxB,EAACP,UAAU,CAACI,EAAE;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACN,CAAC,gBAEFhC,OAAA,CAAAE,SAAA,mBAAI,CACL,eAEDF,OAAA;MAAQiC,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAAC,CAAE;MAAAe,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3CID,SAAS;EAAA,QACSP,aAAa;AAAA;AAAAsC,EAAA,GAD/B/B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}